name: 'Continuous Deployment'
on:
  push:
    branches:
      - master
env:
  ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
  REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
  PORT: ${{ secrets.PORT }}
  POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
  POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
  REDIS_URL: ${{ secrets.REDIS_URL }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04
    environment: Deployment
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_LOGIN }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Setup buildx
        uses: docker/setup-buildx-action@v2.5.0
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: matheusinit/ecommerce-api:latest
          target: production
      - name: Copy Docker Compose file to Virtual Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VIRTUAL_SERVER_HOST }}
          username: ec2-user
          port: 22
          key: ${{ secrets.PRIVATE_KEY }}
          source: './docker-compose.yml'
          target: '.'
      - name: Create .env file
        run: |
          touch .env
          echo "DATABASE_URL=$DATABASE_URL" | tr " " "\n" >> .env
          echo "ACCESS_TOKEN_SECRET=$ACCESS_TOKEN_SECRET" | tr " " "\n" >> .env
          echo "REFRESH_TOKEN_SECRET=$REFRESH_TOKEN_SECRET" | tr " " "\n" >> .env
          echo "PORT=$PORT" | tr " " "\n" >> .env
          echo "REDIS_PASSWORD=$REDIS_PASSWORD" | tr " " "\n" >> .env
          echo "REDIS_URL=$REDIS_URL" | tr " " "\n" >> .env
          echo "POSTGRES_USER=$POSTGRES_USER" | tr " " "\n" >> .env
          echo "POSTGRES_PASSWORD=$POSTGRES_PASSWORD" | tr " " "\n" >> .env
          echo "POSTGRES_DB=$POSTGRES_DB" | tr " " "\n" >> .env
      - name: Copy .env file to Virtual Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VIRTUAL_SERVER_HOST }}
          username: ec2-user
          port: 22
          key: ${{ secrets.PRIVATE_KEY }}
          source: './.env'
          target: '.'
      - name: Copy nginx.conf file to Virtual Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VIRTUAL_SERVER_HOST }}
          username: ec2-user
          port: 22
          key: ${{ secrets.PRIVATE_KEY }}
          source: './infra/nginx.conf'
          target: '.'
      - name: Docker Pull & Run in Virtual Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VIRTUAL_SERVER_HOST }}
          username: ec2-user
          key: ${{ secrets.PRIVATE_KEY }}
          envs: ${{ github.sha }}
          script: |
            docker login
            docker pull matheusinit/ecommerce-api:latest
            docker compose down
            docker compose up -d proxy-reverse
            cat .env
            rm docker-compose.yml
            rm .env
            rm nginx.conf
